<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- ğŸ‘‡ Source generators must target netstandard 2.0 -->
        <TargetFramework>netstandard2.0</TargetFramework>
        <!-- ğŸ‘‡ We don't want to reference the source generator dll directly in consuming projects -->
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <!-- ğŸ‘‡ New project, why not! -->
        <Nullable>enable</Nullable>
        <ImplicitUsings>true</ImplicitUsings>
        <LangVersion>latest</LangVersion>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Common" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
    </ItemGroup>
    

    <PropertyGroup>
        <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
    </PropertyGroup>

    <Target Name="GetDependencyTargetPaths">
        <ItemGroup>
        </ItemGroup>
    </Target>
</Project>